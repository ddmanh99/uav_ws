<launch>
    <!-- <arg name="mav_name" default="m100"/> -->
    <arg name="mav_name" default="hummingbird"/>
    <arg name="gazebo_gui_en" default="false"/>
    <arg name="world_name" default="testbed_large_lv1"/>
    <!-- <arg name="world_name" default="walls_and_grass"/> -->
    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true" />
    <arg name="log_file" default="$(arg mav_name)" />
      
    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find uav_frontier_exploration_3d)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find uav_frontier_exploration_3d)/models"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
        <arg name="gui" value="$(arg gazebo_gui_en)" />
        <!-- <arg name="debug" value="true"/> -->
        <arg name="paused" value="true"/>
        <!-- <arg name="gui" value="false"/> -->
    </include>

    <group ns="$(arg mav_name)">
        <node name="odo_throttler" type="throttle" pkg="topic_tools" args="messages ground_truth/odometry 100 ground_truth/odometry_throttled" />
        <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
            <arg name="mav_name" value="$(arg mav_name)" />
            <arg name="model" value="$(find rotors_description)/urdf/mav_with_perception.gazebo" /> 
            <!-- <arg name="model" value="$(find rotors_description)/urdf/m100.gazebo" /> -->
            <arg name="enable_logging" value="$(arg enable_logging)" />
            <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
            <arg name="log_file" value="$(arg log_file)"/>
        </include>

        <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
            <remap from="odometry" to="odometry_sensor1/odometry" />
        </node>

        <node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>

        <node name="test" pkg="rotors_gazebo" type="test" output="screen"/>
        <node name="goToGoal" pkg="rotors_gazebo" type="goToGoal" output="screen"/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    </group>

    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find rotors_gazebo)/launch/rviz.rviz"/> -->
</launch>
